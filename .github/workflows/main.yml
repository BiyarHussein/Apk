name: Build Kivy APK

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  build:
    runs-on: windows-latest  # Runs on a Windows machine, but we need WSL for Buildozer

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up WSL and Ubuntu
        run: |
          wsl --install Ubuntu-20.04
          wsl sudo apt update
          wsl sudo apt upgrade -y
          
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies in WSL
        run: |
          wsl sudo apt-get install -y \
            build-essential \
            python3-dev \
            libffi-dev \
            zlib1g-dev \
            libjpeg-dev \
            libssl-dev \
            pkg-config \
            git \
            openjdk-17 \
            libncurses5-dev \
            lib32z1 \
            lib32ncurses6 \
            lib32stdc++6 \
            lib32z1-dev \
            libsdl2-dev \
            libssl-dev \
            libffi-dev \
            python3-dev

      - name: Install Buildozer
        run: |
          wsl pip install buildozer

      - name: Build APK using Buildozer
        run: |
          wsl cd /mnt/c/Users/YourUsername/Path/To/Your/Repo
          wsl buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: my-kivy-app-apk
          path: /mnt/c/Users/YourUsername/Path/To/Your/Repo/bin/*.apk

      - name: Send APK to Telegram
        run: |
          apk_path=$(find /mnt/c/Users/YourUsername/Path/To/Your/Repo/bin -name "*.apk")
          echo "Found APK: $apk_path"
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
            -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -F document=@"$apk_path"
